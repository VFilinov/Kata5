Этот скрипт перетасовки предназначен для постоянного обучения самостоятельной игре. Он перетасовывает самое последнее окно данных из предоставленных.
Он выбирает размер окна динамически, основываясь на общем объеме данных, которые были запущены на данный момент, предполагая, что предоставленные каталоги содержат все данные для текущего запуска.
Если на самом деле у вас есть не все данные, например, вы заархивировали или удалили старые данные, или хотите рассчитать размер окна так, как если бы данных было больше, используйте -add-to-data-rows.

Размер окна определяется степенным законом, основанным на количестве строк в цикле N:
WINDOWSIZE(N) = (N^EXPONENT - MIN_ROWS^EXPONENT) / (EXPONENT * MIN_ROWS^(EXPONENT-1)) * INITIAL_WINDOW_PER_ROW + MIN_ROWS

    given arguments:
      -taper-window-exponent EXPONENT \\
      -expand-window-per-row INITIAL_WINDOW_PER_ROW \\
      -min-rows MIN_ROWS  (default 250k)

Это может показаться немного сложным, но в основном это просто степенной закон ^ ЭКСПОНЕНТЫ со сдвигом и масштабированием таким образом, что:
WINDOWSIZE(MIN_ROWS) = MIN_ROWS
(dWINDOWSIZE/dN)(MIN_ROWS) = INITIAL_WINDOW_PER_ROW

Разумными аргументами, аналогичными тем, которые использовались для основных запусков KataGo, были бы
      -taper-window-exponent 0.65 or 0.675 \\
      -expand-window-per-row 0.4 \\
      -min-rows 250000 (default)

Если вы хотите управлять "масштабом" степенного закона иначе, чем минимальными строками, вы также можете указать масштаб окна конусности.
Существует также небольшая хитрость, позволяющая ограничить количество случайных строк (строк, генерируемых случайным образом без использования нейронной сети),
поскольку генерация случайных строк в начале прогона может быть очень быстрой из-за отсутствия загрузки графического процессора и перенасыщения прогона.
Кроме того, выводится не все перетасованное окно, будут сохранены только случайно перетасованные 20 миллионов строк. Настройте это с помощью -keep-target-rows.
Предполагается, что этот скрипт будет многократно запускаться по мере поступления новых данных, так что задолго до того, как train.py потребуется более 20 миллионов строк,
данные будут снова перетасованы и выбраны новые случайные 20 миллионов строк.

Если вы не проводите постоянное обучение самостоятельной работе, а просто хотите перетасовать весь набор данных (а не только его часть)
и вывести все данные (а не только 20 миллионов), вы можете использовать такие аргументы, как:
      -taper-window-exponent 1.0 \\
      -expand-window-per-row 1.0 \\
      -keep-target-rows SOME_VERY_LARGE_NUMBER

Если вы постоянно тренируетесь самостоятельно, но хотите установить фиксированный размер окна, вы можете использовать такие аргументы, как:
      -min-rows YOUR_DESIRED_SIZE \\
      -taper-window-exponent 1.0 \\
      -expand-window-per-row 0.0



    approx_rows_to_keep = num_rows_used
    if keep_target_rows is not None:
        approx_rows_to_keep = min(approx_rows_to_keep, keep_target_rows)

    num_out_files = int(round(approx_rows_to_keep / approx_rows_per_out_file))
    num_out_files = max(num_out_files,1)
